"Hello World!"
"Hello World!"
"Hello World!"\n"Hello World!"
"Hello World!\n Hello World!"
"Hello World! \\n Hello World!"
i -> 1
i <- 1
while (i < 6) {
print(i)
i <- i + 1
}
i <- 1
while (i < 6) {
print(i)
i <- i + 1
if (i == 4) {
break
}
}
for (x in 1:10) {
print(x)
}
my_function <- function(country = "Norway") {
paste("I am from", country)
}
my_function("Sweden")
my_function("India")
my_function() # will get the default value, which is Norway
my_function("USA")
i <- 1
while (i < 6) {
paste(i)
i <- i + 1
}
i <- 1
while (i < 6) {
print(i)
i <- i + 1
}
"ssss"
"ssss" 'ssssssssss'
"sss"
'sss'
install.packages("rJava")
```{r}
install.packages('stopwords')
install.packages('devtools')
#
# This is a Shiny web application. You can run the application by clicking
# the 'Run App' button above.
#
# Find out more about building applications with Shiny here:
#
#    https://shiny.posit.co/
#
library(shiny)
# Define UI for application that draws a histogram
ui <- fluidPage(
# Application title
titlePanel("Old Faithful Geyser Data"),
# Sidebar with a slider input for number of bins
sidebarLayout(
sidebarPanel(
sliderInput("bins",
"Number of bins:",
min = 1,
max = 50,
value = 30)
),
# Show a plot of the generated distribution
mainPanel(
plotOutput("distPlot")
)
)
)
# Define server logic required to draw a histogram
server <- function(input, output) {
output$distPlot <- renderPlot({
# generate bins based on input$bins from ui.R
x    <- faithful[, 2]
bins <- seq(min(x), max(x), length.out = input$bins + 1)
# draw the histogram with the specified number of bins
hist(x, breaks = bins, col = 'darkgray', border = 'white',
xlab = 'Waiting time to next eruption (in mins)',
main = 'Histogram of waiting times')
})
}
# Run the application
shinyApp(ui = ui, server = server)
source("library.R")
source("library.R")
# Library
source("library.R")
shiny::runApp('ScoutRtemelinko')
shiny::runApp('ScoutRtemelinko')
runApp('ScoutRtemelinko')
runApp('ScoutRtemelinko')
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp('~/biseylerdenicem/hiyerarsik.R')
runApp('~/biseylerdenicem/hiyerarsik.R')
runApp('~/biseylerdenicem/hiyerarsik.R')
hc <- hclust(dist(data),method=”ave”)
# Gerekli kütüphaneleri yükleme
if (!require("dplyr")) install.packages("dplyr")
if (!require("ggplot2")) install.packages("ggplot2")
if (!require("forcats")) install.packages("forcats")
if (!require("shiny")) install.packages("shiny")
library(dplyr)
library(ggplot2)
library(forcats)
library(shiny)
data <- read.csv("database.csv")
# Gerekli kütüphaneleri yükleme
if (!require("dplyr")) install.packages("dplyr")
if (!require("ggplot2")) install.packages("ggplot2")
if (!require("forcats")) install.packages("forcats")
if (!require("shiny")) install.packages("shiny")
library(dplyr)
library(ggplot2)
library(forcats)
library(shiny)
data <- read.csv("../database.csv")
# Gerekli kütüphaneleri yükleme
if (!require("dplyr")) install.packages("dplyr")
if (!require("ggplot2")) install.packages("ggplot2")
if (!require("forcats")) install.packages("forcats")
if (!require("shiny")) install.packages("shiny")
library(dplyr)
library(ggplot2)
library(forcats)
library(shiny)
data <- read.csv("birseylerdenicem/database.csv")
data <- read.csv("database.csv")
library(tidyverse)
library(factoextra)
library(plotly)
data <- read_csv("players_22.csv")
library(dplyr)
library(ggplot2)
library(forcats)
library(shiny)
data <- read.csv("database.csv")
library(dplyr)
library(ggplot2)
library(forcats)
library(shiny)
data <- read.csv("C:\Users\temelinko\Home\biseylerdenicem\database.csv")
data <- read.csv("..\Users\temelinko\Home\biseylerdenicem\database.csv")
library(dplyr)
library(ggplot2)
library(forcats)
library(shiny)
data <- read.csv("..\Home\biseylerdenicem\database.csv")
library(dplyr)
library(ggplot2)
library(forcats)
library(shiny)
data <- read.csv("..\biseylerdenicem\database.csv")
library(dplyr)
library(ggplot2)
library(forcats)
library(shiny)
data <- read.csv("..\database.csv")
library(dplyr)
library(ggplot2)
library(forcats)
library(shiny)
data <- read.csv("..\database.csv")
getwd()
setwd('C:\\Users\\temelinko\\Home\\biseylerdenicem')
setwd('\\Users\\temelinko\\Home\\biseylerdenicem')
setwd('Users\\temelinko\\Home\\biseylerdenicem')
setwd('Users\\Temelinko\\Home\\biseylerdenicem')
setwd('\Users\\Temelinko\\Home\\biseylerdenicem')
setwd('..\\Temelinko\\Home\\biseylerdenicem')
getwd()
shiny::runApp()
#Plot Similarity
player_distance <- distance() %>%
filter(ID == as.character(input$playerid)) %>%
mutate(
Var2 = paste0(NAME2, " | ", CLUB2)
)
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
dim(distance)
library(cluster)
library(dplyr)
library(ggplot2)
library(forcats)
library(shiny)
library(cluster)
library(dendextend)
library(factoextra)
library(tidyverse)
library(plotly)
# Veri setini yükleme
data <- read_csv("database.csv")
shiny::runApp()
shiny::runApp()
shiny::runApp()
runApp()
runApp()
shiny::runApp()
shiny::runApp()
runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
